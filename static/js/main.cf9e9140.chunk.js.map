{"version":3,"sources":["constants/filter-options.js","components/Dropdown/Dropdown.js","components/Filter/Filter.js","components/StatCard/StatCard.js","constants/colors.js","components/StatBoard/StatBoard.js","constants/sort-options.js","components/Sort/Sort.js","components/Table/Table.js","data/company-data.js","models/company.js","data/stat-data.js","helpers/reducers.js","components/StatPage/StatPage.js","helpers/helper-functions.js","App.js","serviceWorker.js","index.js"],"names":["id","title","time_unit","time_unit_count","Dropdown","label","options","onChange","useState","isOpen","setIsOpen","selected","setSelected","useEffect","className","type","value","onClick","map","option","key","handleSelected","Filter","filterStatData","handleFilter","useCallback","filterOption","action","payload","filterOptions","StatCard","statTitle","currentPeriod","lastPeriod","bgColors","style","backgroundImage","first","second","StatBoard","props","statData","active_source","weekly_active","nps","current_period","last_period","colors","sortType","Sort","sortTableData","handleSort","sortOption","sortOptions","contracts","Table","companyList","sortCompanyList","name","htmlFor","company","segment","contract","renewals","npsAvg","npsLast","npsFirst","Company","this","thisMonth","lastMonth","thisQuarter","lastQuarter","thisYear","lastYear","filterReducer","state","sortReducer","sort","a","b","localeCompare","StatPage","useReducer","updateStatData","companyData","companyListData","updateCompanyListData","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.cf9e9140.chunk.js","sourcesContent":["export default [\r\n\t{\r\n\t\tid: 1,\r\n\t\ttitle: \"This month\",\r\n\t\ttime_unit: \"MONTH\",\r\n\t\ttime_unit_count: 0,\r\n\t},\r\n\t{\r\n\t\tid: 2,\r\n\t\ttitle: \"Last month\",\r\n\t\ttime_unit: \"MONTH\",\r\n\t\ttime_unit_count: 1,\r\n\t},\r\n\t{\r\n\t\tid: 3,\r\n\t\ttitle: \"This quarter\",\r\n\t\ttime_unit: \"QUARTER\",\r\n\t\ttime_unit_count: 0,\r\n\t},\r\n\t{\r\n\t\tid: 4,\r\n\t\ttitle: \"Last quarter\",\r\n\t\ttime_unit: \"QUARTER\",\r\n\t\ttime_unit_count: 1,\r\n\t},\r\n\t{\r\n\t\tid: 5,\r\n\t\ttitle: \"This year\",\r\n\t\ttime_unit: \"YEAR\",\r\n\t\ttime_unit_count: 0,\r\n\t},\r\n\t{\r\n\t\tid: 6,\r\n\t\ttitle: \"Last year\",\r\n\t\ttime_unit: \"YEAR\",\r\n\t\ttime_unit_count: 1,\r\n\t},\r\n];\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\n//I created a custom dropdown so we can reuse it for sorting, filtering and any other UI functionality that is similar to them\r\nconst Dropdown = ({ label, options, onChange }) => {\r\n\tconst [isOpen, setIsOpen] = useState(false);\r\n\tconst [selected, setSelected] = useState(options && options[0]); //Sets the first option in our options prop as the default sort/filtering option\r\n\r\n\tuseEffect(() => {\r\n\t\tif (onChange) {\r\n\t\t\t//Any function passed as the onChange prop will be called with the currently selected option and can use it to request new data or modify UI appropriately.\r\n\t\t\tonChange(selected);\r\n\t\t}\r\n\t}, [selected, onChange]);\r\n\r\n\tconst toggleDropdown = () => setIsOpen(!isOpen); //This function controls the opening/closing of the dropdown\r\n\r\n\tconst handleSelected = (option) => {\r\n\t\tsetSelected(option);\r\n\t\tsetIsOpen(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"dropdown\">\r\n\t\t\t<span className=\"dropdown-label\">{label}</span>\r\n\t\t\t<input\r\n\t\t\t\tclassName=\"dropdown-button\"\r\n\t\t\t\ttype=\"button\"\r\n\t\t\t\tvalue={selected.title}\r\n\t\t\t\tonClick={toggleDropdown}\r\n\t\t\t/>\r\n\r\n\t\t\t<ul id=\"dropdown-list\" className={`dropdown-list${isOpen ? \" show\" : \"\"}`}>\r\n\t\t\t\t{options.map((option) => (\r\n\t\t\t\t\t<li\r\n\t\t\t\t\t\tclassName=\"dropdown-item\"\r\n\t\t\t\t\t\tkey={option.id}\r\n\t\t\t\t\t\tonClick={() => handleSelected(option)} //This function remembers the particular option passed via closures, and we use that to set selected item on click.\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{option.title}\r\n\t\t\t\t\t</li>\r\n\t\t\t\t))}\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Dropdown;\r\n","import React, { useCallback } from \"react\";\r\n\r\nimport filterOptions from \"../../constants/filter-options\";\r\nimport Dropdown from \"../Dropdown/Dropdown\";\r\n\r\nconst Filter = ({ filterStatData }) => {\r\n\tconst handleFilter = useCallback(\r\n\t\t(filterOption) => {\r\n\t\t\t//In the Dropdown component, any function passed as the onChange prop gets the currently selected option as parameter\r\n\t\t\t//Under normal circumstances, we will import our FILTER action function from redux and dispatch this action here using the filterOption as payload.\r\n\t\t\t//But for demonstration purposes of this app, we have passed a custom dispatch prop for this purpose.\r\n\r\n\t\t\tconst action = {\r\n\t\t\t\ttype: filterOption.time_unit,\r\n\t\t\t\tpayload: filterOption.time_unit_count,\r\n\t\t\t};\r\n\r\n\t\t\tfilterStatData(action);\r\n\t\t},\r\n\t\t[filterStatData]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div className=\"filter\">\r\n\t\t\t<Dropdown\r\n\t\t\t\tlabel=\"Filter by\"\r\n\t\t\t\toptions={filterOptions}\r\n\t\t\t\tonChange={(option) => handleFilter(option)}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\n\r\nconst StatCard = ({ statTitle, currentPeriod, lastPeriod, bgColors }) => {\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName=\"card\"\r\n\t\t\tstyle={{\r\n\t\t\t\tbackgroundImage: `linear-gradient(to right, ${bgColors?.first}, ${bgColors?.second})`,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<span className=\"card__sub\">{statTitle}</span>\r\n\t\t\t<span className=\"card__value\">{currentPeriod}</span>\r\n\t\t\t<span className=\"card__sub\">{`${lastPeriod} Last period`}</span>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default StatCard;\r\n","export default [\r\n\t{ first: \"#F5C099\", second: \"#F29E98\" },\r\n\t{ first: \"#94C1F4\", second: \"#6A9FEA\" },\r\n\t{ first: \"#94D5D0\", second: \"#78D0C0\" },\r\n];\r\n","import React from \"react\";\r\n\r\nimport StatCard from \"../StatCard/StatCard\";\r\n\r\nimport colors from \"../../constants/colors\";\r\n\r\nconst StatBoard = (props) => {\r\n\tconst { active_source, weekly_active, nps } = props.statData;\r\n\r\n\treturn (\r\n\t\t<div id=\"stat-board\" className=\"stat-board\">\r\n\t\t\t<StatCard\r\n\t\t\t\tstatTitle=\"Active sourcing\"\r\n\t\t\t\tcurrentPeriod={active_source?.current_period}\r\n\t\t\t\tlastPeriod={active_source?.last_period}\r\n\t\t\t\tbgColors={colors[0]}\r\n\t\t\t/>\r\n\t\t\t<StatCard\r\n\t\t\t\tstatTitle=\"Weekly active\"\r\n\t\t\t\tcurrentPeriod={weekly_active?.current_period}\r\n\t\t\t\tlastPeriod={weekly_active?.last_period}\r\n\t\t\t\tbgColors={colors[1]}\r\n\t\t\t/>\r\n\t\t\t<StatCard\r\n\t\t\t\tstatTitle=\"NPS\"\r\n\t\t\t\tcurrentPeriod={nps?.current_period}\r\n\t\t\t\tlastPeriod={nps?.last_period}\r\n\t\t\t\tbgColors={colors[2]}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default StatBoard;\r\n","export default [\r\n\t{\r\n\t\tid: 1,\r\n\t\ttitle: \"Id\",\r\n\t\tsortType: \"ID\",\r\n\t},\r\n\t{\r\n\t\tid: 2,\r\n\t\ttitle: \"Company Name\",\r\n\t\tsortType: \"COMPANY_NAME\",\r\n\t},\r\n\t{\r\n\t\tid: 3,\r\n\t\ttitle: \"Segment\",\r\n\t\tsortType: \"SEGMENT\",\r\n\t},\r\n\t{\r\n\t\tid: 4,\r\n\t\ttitle: \"Contract\",\r\n\t\tsortType: \"CONTRACT\",\r\n\t},\r\n\t{\r\n\t\tid: 5,\r\n\t\ttitle: \"Best NPS avg\",\r\n\t\tsortType: \"BEST_NPS_AVG\",\r\n\t},\r\n\t{\r\n\t\tid: 6,\r\n\t\ttitle: \"Worst NPS avg\",\r\n\t\tsortType: \"WORST_NPS_AVG\",\r\n\t},\r\n\t{\r\n\t\tid: 7,\r\n\t\ttitle: \"NPS Last\",\r\n\t\tsortType: \"NPS_LAST\",\r\n\t},\r\n\t{\r\n\t\tid: 8,\r\n\t\ttitle: \"NPS First\",\r\n\t\tsortType: \"NPS_FIRST\",\r\n\t},\r\n];\r\n","import React, { useCallback } from \"react\";\r\n\r\nimport Dropdown from \"../Dropdown/Dropdown\";\r\n\r\nimport sortOptions from \"../../constants/sort-options\";\r\n\r\nconst Sort = ({ sortTableData }) => {\r\n\tconst handleSort = useCallback(\r\n\t\t(sortOption) => {\r\n\t\t\tconst action = {\r\n\t\t\t\ttype: sortOption.sortType,\r\n\t\t\t};\r\n\r\n\t\t\tsortTableData(action);\r\n\t\t},\r\n\t\t[sortTableData]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div className=\"sort\">\r\n\t\t\t<Dropdown label=\"Sort by\" options={sortOptions} onChange={handleSort} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Sort;\r\n","import React from \"react\";\r\nimport Sort from \"../Sort/Sort\";\r\n\r\nconst contracts = [\"Weekly\", \"Monthly\", \"Quarterly\", \"Yearly\", \"Seasonal\"];\r\n\r\nconst Table = ({ companyList, sortCompanyList }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"sort-box\">\r\n\t\t\t\t<div className=\"critical-box\">\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tname=\"critical\"\r\n\t\t\t\t\t\tid=\"critical\"\r\n\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\tclassName=\"critical-checkbox\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<label htmlFor=\"critical\" className=\"critical-label\">\r\n\t\t\t\t\t\tShow critical\r\n\t\t\t\t\t</label>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<Sort sortTableData={sortCompanyList} />\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"table-wrapper\">\r\n\t\t\t\t<table className=\"table\">\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t<tr className=\"table-row\">\r\n\t\t\t\t\t\t\t<th className=\"table-col fixed\">Id</th>\r\n\t\t\t\t\t\t\t<th className=\"table-col fixed\">Company name</th>\r\n\t\t\t\t\t\t\t<th className=\"table-col\">Segment</th>\r\n\t\t\t\t\t\t\t<th className=\"table-col\">Contract</th>\r\n\t\t\t\t\t\t\t<th className=\"table-col\">Renewals</th>\r\n\t\t\t\t\t\t\t<th className=\"table-col\">NPS avg</th>\r\n\t\t\t\t\t\t\t<th className=\"table-col\">NPS last</th>\r\n\t\t\t\t\t\t\t<th className=\"table-col\">NPS first</th>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\r\n\t\t\t\t\t{/*Usually from here, we'd have fetched all of our company data as a list, and then render the rest of the table with JavaScript map function */}\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t{companyList.map((company) => (\r\n\t\t\t\t\t\t\t<tr key={company.id} className=\"table-row\">\r\n\t\t\t\t\t\t\t\t<td className=\"table-col fixed\">{company.id}</td>\r\n\t\t\t\t\t\t\t\t<td className=\"table-col fixed\">{company.name}</td>\r\n\t\t\t\t\t\t\t\t<td className=\"table-col\">{company.segment}</td>\r\n\t\t\t\t\t\t\t\t<td className=\"table-col\">{contracts[company.contract]}</td>\r\n\t\t\t\t\t\t\t\t<td className=\"table-col\">{company.renewals}</td>\r\n\t\t\t\t\t\t\t\t<td className=\"table-col\">{company.npsAvg}</td>\r\n\t\t\t\t\t\t\t\t<td className=\"table-col\">{company.npsLast}</td>\r\n\t\t\t\t\t\t\t\t<td className=\"table-col\">{company.npsFirst}</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Table;\r\n","//Assuming this is the data that comes from the API\r\nexport default [\r\n\t{\r\n\t\tid: 1,\r\n\t\tname: \"Gronda GmbH\",\r\n\t\tsegment: \"Hospitality\",\r\n\t\tcontract: 3, //Yearly\r\n\t\trenewals: 16,\r\n\t\tnpsAvg: 255,\r\n\t\tnpsFirst: 303,\r\n\t\tnpsLast: 299,\r\n\t},\r\n\t{\r\n\t\tid: 2,\r\n\t\tname: \"Baker's Den\",\r\n\t\tsegment: \"Food\",\r\n\t\tcontract: 1, //Monthly\r\n\t\trenewals: 21,\r\n\t\tnpsAvg: 109,\r\n\t\tnpsFirst: 211,\r\n\t\tnpsLast: 165,\r\n\t},\r\n\t{\r\n\t\tid: 3,\r\n\t\tname: \"TheKop GmbH\",\r\n\t\tsegment: \"Sports Entertainment\",\r\n\t\tcontract: 4, //Seasonal\r\n\t\trenewals: 25,\r\n\t\tnpsAvg: 409,\r\n\t\tnpsFirst: 382,\r\n\t\tnpsLast: 607,\r\n\t},\r\n\t{\r\n\t\tid: 4,\r\n\t\tname: \"Cartco GmbH\",\r\n\t\tsegment: \"Marketing\",\r\n\t\tcontract: 3, //Yearly\r\n\t\trenewals: 8,\r\n\t\tnpsAvg: 89,\r\n\t\tnpsFirst: 62,\r\n\t\tnpsLast: 97,\r\n\t},\r\n\t{\r\n\t\tid: 5,\r\n\t\tname: \"AboutYou\",\r\n\t\tsegment: \"eCommerce\",\r\n\t\tcontract: 2, //Quarterly\r\n\t\trenewals: 13,\r\n\t\tnpsAvg: 202,\r\n\t\tnpsFirst: 218,\r\n\t\tnpsLast: 181,\r\n\t},\r\n\t{\r\n\t\tid: 6,\r\n\t\tname: \"Robert Bosch GmbH\",\r\n\t\tsegment: \"Automobile\",\r\n\t\tcontract: 3, //Yearly\r\n\t\trenewals: 89,\r\n\t\tnpsAvg: 285,\r\n\t\tnpsFirst: 369,\r\n\t\tnpsLast: 419,\r\n\t},\r\n\t{\r\n\t\tid: 7,\r\n\t\tname: \"Deutsche Bahn\",\r\n\t\tsegment: \"Transportation\",\r\n\t\tcontract: 2, //Quarterly\r\n\t\trenewals: 29,\r\n\t\tnpsAvg: 321,\r\n\t\tnpsFirst: 306,\r\n\t\tnpsLast: 327,\r\n\t},\r\n\t{\r\n\t\tid: 8,\r\n\t\tname: \"Fresenius\",\r\n\t\tsegment: \"Healthcare\",\r\n\t\tcontract: 0, //Weekly\r\n\t\trenewals: 5,\r\n\t\tnpsAvg: 109,\r\n\t\tnpsFirst: 121,\r\n\t\tnpsLast: 98,\r\n\t},\r\n];\r\n","export default class Company {\r\n\tconstructor(id, name, segment, contract, renewals, npsAvg, npsLast, npsFirst) {\r\n\t\tthis.id = id;\r\n\t\tthis.name = name;\r\n\t\tthis.segment = segment;\r\n\t\tthis.contract = contract;\r\n\t\tthis.renewals = renewals;\r\n\t\tthis.npsAvg = npsAvg;\r\n\t\tthis.npsLast = npsLast;\r\n\t\tthis.npsFirst = npsFirst;\r\n\t}\r\n}\r\n","// this is the API response\r\nexport default {\r\n\tthisMonth: {\r\n\t\tactive_source: {\r\n\t\t\tcurrent_period: 45,\r\n\t\t\tlast_period: 30,\r\n\t\t},\r\n\t\tweekly_active: {\r\n\t\t\tcurrent_period: 38,\r\n\t\t\tlast_period: 26,\r\n\t\t},\r\n\t\tnps: {\r\n\t\t\tcurrent_period: 25,\r\n\t\t\tlast_period: 39,\r\n\t\t},\r\n\t},\r\n\tlastMonth: {\r\n\t\tactive_source: {\r\n\t\t\tcurrent_period: 25,\r\n\t\t\tlast_period: 14,\r\n\t\t},\r\n\t\tweekly_active: {\r\n\t\t\tcurrent_period: 59,\r\n\t\t\tlast_period: 16,\r\n\t\t},\r\n\t\tnps: {\r\n\t\t\tcurrent_period: 19,\r\n\t\t\tlast_period: 38,\r\n\t\t},\r\n\t},\r\n\tthisQuarter: {\r\n\t\tactive_source: {\r\n\t\t\tcurrent_period: 87,\r\n\t\t\tlast_period: 53,\r\n\t\t},\r\n\t\tweekly_active: {\r\n\t\t\tcurrent_period: 109,\r\n\t\t\tlast_period: 50,\r\n\t\t},\r\n\t\tnps: {\r\n\t\t\tcurrent_period: 89,\r\n\t\t\tlast_period: 78,\r\n\t\t},\r\n\t},\r\n\tlastQuarter: {\r\n\t\tactive_source: {\r\n\t\t\tcurrent_period: 72,\r\n\t\t\tlast_period: 61,\r\n\t\t},\r\n\t\tweekly_active: {\r\n\t\t\tcurrent_period: 115,\r\n\t\t\tlast_period: 49,\r\n\t\t},\r\n\t\tnps: {\r\n\t\t\tcurrent_period: 94,\r\n\t\t\tlast_period: 81,\r\n\t\t},\r\n\t},\r\n\tthisYear: {\r\n\t\tactive_source: {\r\n\t\t\tcurrent_period: 219,\r\n\t\t\tlast_period: 198,\r\n\t\t},\r\n\t\tweekly_active: {\r\n\t\t\tcurrent_period: 286,\r\n\t\t\tlast_period: 151,\r\n\t\t},\r\n\t\tnps: {\r\n\t\t\tcurrent_period: 170,\r\n\t\t\tlast_period: 199,\r\n\t\t},\r\n\t},\r\n\tlastYear: {\r\n\t\tactive_source: {\r\n\t\t\tcurrent_period: 334,\r\n\t\t\tlast_period: 283,\r\n\t\t},\r\n\t\tweekly_active: {\r\n\t\t\tcurrent_period: 401,\r\n\t\t\tlast_period: 209,\r\n\t\t},\r\n\t\tnps: {\r\n\t\t\tcurrent_period: 221,\r\n\t\t\tlast_period: 269,\r\n\t\t},\r\n\t},\r\n};\r\n","import statData from \"../data/stat-data\";\r\n\r\nexport const filterReducer = (state, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase \"MONTH\":\r\n\t\t\t//The value of action.payload is either 1 or 0.\r\n\t\t\treturn action.payload ? statData.lastMonth : statData.thisMonth;\r\n\t\tcase \"QUARTER\":\r\n\t\t\treturn action.payload ? statData.lastQuarter : statData.thisQuarter;\r\n\r\n\t\tcase \"YEAR\":\r\n\t\t\treturn action.payload ? statData.lastYear : statData.thisYear;\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport const sortReducer = (state, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase \"ID\":\r\n\t\t\treturn [...state].sort((a, b) => a.id - b.id);\r\n\t\tcase \"COMPANY_NAME\":\r\n\t\t\treturn [...state].sort((a, b) => a.name.localeCompare(b.name));\r\n\t\tcase \"SEGMENT\":\r\n\t\t\treturn [...state].sort((a, b) => a.segment.localeCompare(b.segment));\r\n\t\tcase \"CONTRACT\":\r\n\t\t\treturn [...state].sort((a, b) => a.contract - b.contract);\r\n\t\tcase \"BEST_NPS_AVG\":\r\n\t\t\treturn [...state].sort((a, b) => b.npsAvg - a.npsAvg);\r\n\t\tcase \"WORST_NPS_AVG\":\r\n\t\t\treturn [...state].sort((a, b) => a.npsAvg - b.npsAvg);\r\n\t\tcase \"NPS_LAST\":\r\n\t\t\treturn [...state].sort((a, b) => a.npsLast - b.npsLast);\r\n\t\tcase \"NPS_FIRST\":\r\n\t\t\treturn [...state].sort((a, b) => a.npsFirst - b.npsFirst);\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","import React, { useReducer } from \"react\";\r\n\r\nimport Filter from \"../../components/Filter/Filter\";\r\nimport StatBoard from \"../../components/StatBoard/StatBoard\";\r\nimport Table from \"../Table/Table\";\r\n\r\nimport { getCompanyList } from \"../../helpers/helper-functions\";\r\n\r\nimport { filterReducer, sortReducer } from \"../../helpers/reducers\";\r\n\r\nconst StatPage = () => {\r\n\tconst [statData, updateStatData] = useReducer(filterReducer, {});\r\n\tconst [companyListData, updateCompanyListData] = useReducer(\r\n\t\tsortReducer,\r\n\t\tgetCompanyList()\r\n\t);\r\n\r\n\t//N.B we can actually pass sortCompanyList prop through a Context Provider or other patterns, because <Table /> component also passes it to the <Sort /> component inside it.\r\n\t//But for simplicity and also since we are simply passing it twice and not using it anywhere else, I've decided to keep it this way.\r\n\treturn (\r\n\t\t<div className=\"stat-page\">\r\n\t\t\t<Filter filterStatData={updateStatData} />\r\n\t\t\t<StatBoard statData={statData} />\r\n\t\t\t<Table\r\n\t\t\t\tcompanyList={companyListData}\r\n\t\t\t\tsortCompanyList={updateCompanyListData}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default StatPage;\r\n","import companyData from \"../data/company-data\";\r\nimport Company from \"../models/company\";\r\n\r\nexport const getCompanyList = () => {\r\n\tconst companyList = companyData.map(\r\n\t\t(company) =>\r\n\t\t\tnew Company(\r\n\t\t\t\tcompany.id,\r\n\t\t\t\tcompany.name,\r\n\t\t\t\tcompany.segment,\r\n\t\t\t\tcompany.contract,\r\n\t\t\t\tcompany.renewals,\r\n\t\t\t\tcompany.npsAvg,\r\n\t\t\t\tcompany.npsLast,\r\n\t\t\t\tcompany.npsFirst\r\n\t\t\t)\r\n\t);\r\n\r\n\treturn companyList;\r\n};\r\n","import React from \"react\";\nimport \"./App.css\";\nimport StatPage from \"./components/StatPage/StatPage\";\n\nfunction App() {\n\treturn <StatPage />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}